Restful api란??
	Rest란?
	“Representational State Transfer”의 약자로 자원을 이름으로 구분하여 해당 자원의 상태를 주고 받는 모든 것을 의미함
	즉 자원의 표현에 의한 상태 전달
A.자원의 표현 : 자원 = 해당 소프트웨어가 관리하는 모든 것(문서, 그림, 데이터, 해당 소프트웨어 자체 등) 자원의 표현 = 그 자원을 표현하기 위한 이름(DB의 학생 정보가 자원일 때, ‘students’를 자원의 표현으로 정함)
B.상태 전달 :
데이터가 요청되어지는 시점에서 자원의 상태를 전달
Json 혹은 xml를 통해 데이터를 주고 받는 것이 일반적
	월드 와이드 웹과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 개발 아키텍처의 한 형식
	Rest는 기본적으로 웹의 기존 기술과 http 프로토콜을 그대로 활용하기 때문에 웹의 장점을 최대한 활용할 수 있는 아키텍처 스타일임
	Rest는 네트워크 상에서 client 와 server사이의 통신 방식 중 하나임

	Rest의 구체적인 개념
	http url를 통해 자원을 명시하고, http method(post, get, put, delete)를 통해 해당 자원에 대한 crud operation을 적용하는 것을 의미
	즉, rest는 자원기반의 구조 설계의 중심에 resource가 있고 http method를 통해 resource를 처리하도록 설계된 아키텍쳐를 의미함
	웹 사이트의 이미지, 텍스트, DB내용 등의 모든 자원에 고유한 ID인 HTTP URL를 부여함

	REST의 장단점
장점
	HTTP 프로토콜의 인프라를 그대로 사용하므로 REST API 사용을 위한 별도의 인프라를 구출할 필요가 없음
	HTTP 프로토콜의 표준을 최대한 활용하여 여러 추가적인 장점을 함께 가져갈 수 있게 해줌
	HTTP 표준 프로토콜에 따르는 모든 플랫폼에서 사용이 가능함
	Hypermedia API의 기본을 충실히 지키면서 범용성을 보장함
	REST API 메시지가 의도하는 바를 명확하게 나타내므로 의도하는 바를 쉽게 파악할 수 있음
	여러가지 서비스 디자인에서 생길 수 있는 문제를 최소화함
	서버와 클라이언트의 역할을 명확하게 분리함
단점
	표준이 존재하지 않음
	사용할 수 있는 메소드가 4가지 밖에 없음(HTTP 메소드 제한적)
	브라우저를 통해 테스트할 일이 많은 서비스라면 쉽게 고칠 수 있는 URL보다 헤더 값이더 어렵게 느껴질 수 있음
	구형 브라우저가 아직 제대로 지원해주지 못하는 부분이 존재함

	REST가 필요한 이유
	애플리케이션 분리 및 통합
	다양한 클라이언트의 등장
	최근의 서버 프로그램은 다양한 브라우저와 안드로이폰, 아이폰과 같은 모바일 디바이스에서도 통신을 할 수 있어야 함
	이러한 멀티 플랫폼에 대한 지원을 위해 서비스 자원에 대한 아키텍처를 세우고 이용하는 방법을 모색한 결과, REST에 관심을 가지게 되었음

REST 구성 요소
1.	자원 : URL
모든 자원에 고유한 ID가 존재하고, 이 자원은 Server에 존재한다.
자원을 구별하는 ID는 ‘/groups/:group_id’와 같은 HTTP URI 다.
Client는 URI를 이용해서 자원을 지정하고 해당 자원의 상태(정보)에 대한 조작을 Server에 요청한다.
2.	행위 : HTTP Method
HTTP 프로토콜의 Method를 사용한다.
HTTP 프로토콜은 GET, POST, PUT, DELETE 와 같은 메서드를 제공한다.
3.	표현 : REPRESENTATION OF RESOURCE
Client가 자원의 상태(정보)에 대한 조작을 요청하면 Server는 이에 적절한 응답(Representation)을 보낸다.
REST에서 하나의 자원은 JSON, XML, TEXT, RSS 등 여러 형태의 Representation으로 나타내어 질 수 있다.
JSON 혹은 XML를 통해 데이터를 주고 받는 것이 일반적이다.


